#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

#define N 5

sem_t forks[N];
pthread_t philosophers[N];

void* dine(void* num) {
    int i = *(int*)num;

    sem_wait(&forks[i]);
    sem_wait(&forks[(i+1)%N]);

    printf("Philosopher %d is eating\n", i);

    sem_post(&forks[i]);
    sem_post(&forks[(i+1)%N]);

    printf("Philosopher %d is thinking\n", i);

    return NULL;
}

int main() {
    int i, indices[N];

    for(i = 0; i < N; i++) {
        sem_init(&forks[i], 0, 1);
        indices[i] = i;
    }

    for(i = 0; i < N; i++)
        pthread_create(&philosophers[i], NULL, dine, &indices[i]);

    for(i = 0; i < N; i++)
        pthread_join(philosophers[i], NULL);

    return 0;
}
